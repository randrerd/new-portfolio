{"version":3,"sources":["containers/ThemeContext.js","languages/index.js","containers/Language.js","components/Cursor.js","pages/ComingSoon/index.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","theme","ThemeProvider","children","useState","setTheme","provider","userThemeChange","e","newTheme","window","localStorage","setItem","Provider","value","dictionaryList","en","es","LanguageContext","userLanguage","dictionary","LanguageProvider","setUserLanguage","userLanguageChange","selected","newLanguage","Cursor","cursorX","useMotionValue","cursorY","springConfig","damping","stiffness","cursorXSpring","useSpring","cursorYSpring","useEffect","moveCursor","set","clientX","clientY","addEventListener","removeEventListener","div","style","translateX","translateY","className","ComingSoon","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6oHAEaA,EAAeC,wBAAc,CACxCC,MAAO,UAGF,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAAY,EAChBC,mBAAS,SADO,mBACnCH,EADmC,KAC5BI,EAD4B,KAGpCC,EAAW,CACfL,QACAM,gBAAiB,SAACC,GAChB,IAAMC,EAAWD,IAAkB,UAAVP,EAAoB,OAAS,SACtDI,EAASI,GACTC,OAAOC,aAAaC,QAAQ,aAAcH,KAG9C,OACE,cAACV,EAAac,SAAd,CAAuBC,MAAOR,EAA9B,SAAyCH,I,ICfhCY,EAAiB,CAAEC,G,MAAIC,G,OCCvBC,EAAkBlB,wBAAc,CAC3CmB,aAAc,KACdC,WAAYL,EAAeC,KAGtB,SAASK,EAAT,GAAyC,IAAblB,EAAY,EAAZA,SAAY,EACLC,mBAAS,MADJ,mBACtCe,EADsC,KACxBG,EADwB,KAGvChB,EAAW,CACfa,eACAC,WAAYL,EAAeI,GAC3BI,mBAAoB,SAACC,GACnB,IAAMC,EAAcD,IAEC,OAAjBL,EACA,KACA,MACJG,EAAgBG,GAChBf,OAAOC,aAAaC,QAAQ,YAAaa,KAI7C,OACE,cAACP,EAAgBL,SAAjB,CAA0BC,MAAOR,EAAjC,SACGH,I,WCzBQ,SAASuB,IACtB,IAAMC,EAAUC,aAAgB,KAC1BC,EAAUD,aAAgB,KAC1BE,EAAe,CAAEC,QAAS,GAAIC,UAAW,KACzCC,EAAgBC,YAAUP,EAASG,GACnCK,EAAgBD,YAAUL,EAASC,GAYzC,OAVAM,qBAAU,WACR,IAAMC,EAAa,SAAC7B,GAClBmB,EAAQW,IAAI9B,EAAE+B,SACdV,EAAQS,IAAI9B,EAAEgC,UAGhB,OADA9B,OAAO+B,iBAAiB,YAAaJ,GAC9B,WACL3B,OAAOgC,oBAAoB,YAAaL,OAI1C,cAAC,IAAOM,IAAR,CACEC,MAAO,CACLC,WAAYZ,EACZa,WAAYX,GAEdY,UAAU,gBCxBD,SAASC,IACtB,OACE,qBAAKD,UAAU,8DAAf,SACE,qBAAKA,UAAU,kJAAf,SAEE,oBAAIA,UAAU,mDAAd,iFCqBOE,MAhBf,WACE,OACE,qCACE,cAACvB,EAAD,IACA,cAACL,EAAD,UACE,cAACnB,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgD,KAAK,IAAIC,OAAK,EAACC,UAAWJ,gBCRhCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3f6cf93.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext({\r\n  theme: 'light',\r\n});\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  const provider = {\r\n    theme,\r\n    userThemeChange: (e) => {\r\n      const newTheme = e ? e : theme === 'light' ? 'dark' : 'light';\r\n      setTheme(newTheme);\r\n      window.localStorage.setItem('pref-theme', newTheme);\r\n    },\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={provider}>{children}</ThemeContext.Provider>\r\n  );\r\n}\r\n","import en from './en.json';\r\nimport es from './es.json';\r\n\r\nexport const dictionaryList = { en, es };\r\n\r\nexport const languageOptions = {\r\n  en: 'English',\r\n  es: 'Espa√±ol'\r\n};","import React, { useState, createContext, useContext } from 'react';\r\nimport { dictionaryList } from '../languages';\r\n\r\n//Create the LanguageContext with default language\r\nexport const LanguageContext = createContext({\r\n  userLanguage: 'en',\r\n  dictionary: dictionaryList.en,\r\n});\r\n\r\nexport function LanguageProvider({ children }) {\r\n  const [userLanguage, setUserLanguage] = useState('en');\r\n\r\n  const provider = {\r\n    userLanguage,\r\n    dictionary: dictionaryList[userLanguage],\r\n    userLanguageChange: (selected) => {\r\n      const newLanguage = selected\r\n        ? selected\r\n        : userLanguage === 'en'\r\n        ? 'es'\r\n        : 'en';\r\n      setUserLanguage(newLanguage);\r\n      window.localStorage.setItem('pref-lang', newLanguage);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={provider}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n\r\nexport function Text({ tid, section }) {\r\n  const languageContext = useContext(LanguageContext);\r\n  const sectionContent = languageContext.dictionary[section]\r\n\r\n  //Checks if needs to return an array to map it over or just a string\r\n  if(!Array.isArray(sectionContent)){\r\n    return !tid ? sectionContent : sectionContent[tid] || tid\r\n\r\n  } else {\r\n    return sectionContent\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { motion, useMotionValue, useSpring } from 'framer-motion';\r\n\r\nexport default function Cursor() {\r\n  const cursorX = useMotionValue(-100);\r\n  const cursorY = useMotionValue(-100);\r\n  const springConfig = { damping: 25, stiffness: 700 };\r\n  const cursorXSpring = useSpring(cursorX, springConfig);\r\n  const cursorYSpring = useSpring(cursorY, springConfig);\r\n\r\n  useEffect(() => {\r\n    const moveCursor = (e) => {\r\n      cursorX.set(e.clientX);\r\n      cursorY.set(e.clientY);\r\n    };\r\n    window.addEventListener('mousemove', moveCursor);\r\n    return () => {\r\n      window.removeEventListener('mousemove', moveCursor);\r\n    };\r\n  });\r\n  return (\r\n    <motion.div\r\n      style={{\r\n        translateX: cursorXSpring,\r\n        translateY: cursorYSpring,\r\n      }}\r\n      className=\"cursor z-50\"\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ComingSoon() {\r\n  return (\r\n    <div className=\"bg-black flex flex-col items-center justify-center h-screen\">\r\n      <div className=\"lg:w-3/12 md:w-2/4 bg-black z-10 absolute m-8 flex flex-col items-center justify-center border-white border-solid border-8 rounded-sm py-8 px-8\">\r\n        {/* <h1 className=\"text-6xl z-20\">üë∑üèΩ‚Äç‚ôÇÔ∏è</h1> */}\r\n        <h2 className=\"text-4xl text-white font-medium text-center z-20\">\r\n          We're working for you, pretty soon everything will be finished.\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","//App.js\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './styles/main.css';\r\n// import Home from './pages/Home';\r\nimport { ThemeProvider } from './containers/ThemeContext';\r\nimport { LanguageProvider } from './containers/Language';\r\n\r\nimport Cursor from './components/Cursor';\r\nimport ComingSoon from './pages/ComingSoon';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Cursor />\r\n      <LanguageProvider>\r\n        <ThemeProvider>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route path=\"/\" exact component={ComingSoon} />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </ThemeProvider>\r\n      </LanguageProvider>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nreportWebVitals();\r\n"],"sourceRoot":""}